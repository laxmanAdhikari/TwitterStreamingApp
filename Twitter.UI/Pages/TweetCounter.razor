@page "/tweetcounter"

@using System.Text.Json
@using System.Text.Json.Serialization

@inject IHttpClientFactory ClientFactory

<PageTitle>Tweet Counter</PageTitle>

<h1> Tweet Counter</h1>

@if (getTweetCountError)
{
    <p>Unable to get Tweet count </p>
}
else
{
    <p role="status">Current tweet count: @currentCount</p>
}

<button class="btn btn-primary" @onclick="GetTweetCount">Tweet Count</button>

@code {
    private int currentCount = 0;
    private bool shouldRender;
    private bool getTweetCountError;

    protected override bool ShouldRender() => shouldRender;


    private async void GetTweetCount()
    {
        var request = new HttpRequestMessage(HttpMethod.Get, "http://localhost:8080/api/v1/count");

        request.Headers.Add("Accept", "application/json");
        request.Headers.Add("User-Agent", "Twitter V2 Api");

        var client = ClientFactory.CreateClient();

        var response = await client.SendAsync(request);

        if(response.IsSuccessStatusCode)
        {
            using var responseStream = await response.Content.ReadAsStreamAsync();

            currentCount = await JsonSerializer.DeserializeAsync<int>(responseStream);

        }
        else
        {
            getTweetCountError = true;
        }

        shouldRender = true;
    }
}
